from data.config import db
from keyboards.inline.adminkeyinline import mailingFalseKey, sendMailingKey
from keyboards.reply.adminkey import kbMainAdmin
from loader import *
from states.admin_state import mailingPost
from utils.misc_func.bot_models import FSM
from utils.misc_func.otherfunc import createMediaGroup


@adminRouter.message(F.text == "üì¢ –†–∞—Å—Å—ã–ª–∫–∞")
async def mailing_main_page(msg: Message, state: FSM):
    text = (
        "<b>üì¢ –†–∞—Å—Å—ã–ª–∫–∞</b>\n\n"
        "<i>–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –≥–æ—Ç–æ–≤—ã–π –ø–æ—Å—Ç, –≤–∫–ª—é—á–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∏, —Ç–µ–∫—Å—Ç –∏ —Ç.–¥.</i>"
    )
    await state.set_state(mailingPost.post)
    return msg.answer(text, reply_markup=mailingFalseKey())


@adminRouter.message(mailingPost.post, F.media_group_id)
async def mailing_post_page(msg: Message, state: FSM, album: list[Message]):
    media_group = await createMediaGroup(album)
    await bot.send_media_group(chat_id=msg.from_user.id, media=media_group.build())
    await state.update_data(post=media_group)
    await state.set_state(mailingPost.send)
    return msg.answer("–ë—É–¥–µ—Ç —Ä–∞—Å—Å—ã–ª–∞—Ç—å—Å—è –ø–æ—Å—Ç –≤—ã—à–µ, —Ä–∞–∑–æ—Å–ª–∞—Ç—å?", reply_markup=sendMailingKey())


@adminRouter.message(mailingPost.post)
async def mailing_postd_page(msg: Message, state: FSM):
    await bot.copy_message(
        chat_id=msg.from_user.id, from_chat_id=msg.from_user.id, message_id=msg.message_id
    )
    await state.update_data(post=msg.message_id)
    await state.set_state(mailingPost.send)
    return msg.answer("–ë—É–¥–µ—Ç —Ä–∞—Å—Å—ã–ª–∞—Ç—å—Å—è –ø–æ—Å—Ç –≤—ã—à–µ, —Ä–∞–∑–æ—Å–ª–∞—Ç—å?", reply_markup=sendMailingKey())


@adminRouter.callback_query(mailingPost.send, F.data == "start_spam")
async def start_spam_func(call: CallbackQuery, state: FSM):
    data = await state.get_data()
    await state.clear()
    all_users = await db.get_all_users()
    try:
        data_int = int(data["post"])
        data_type = True
    except:
        data_type = False
    s = 0
    n = 0
    await call.message.edit_text("–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞, –ø–æ—Å–ª–µ –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
    for user in all_users:
        try:
            if data_type:
                await bot.copy_message(
                    chat_id=user["_id"], from_chat_id=call.from_user.id, message_id=data_int
                )
            else:
                await bot.send_media_group(chat_id=user["_id"], media=data["post"].build())
            s += 1
        except Exception as e:
            logger.error(e)
            n += 1
    text = (
        f"–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
        f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>{len(all_users)} —á–µ–ª.</code>\n"
        f"–£–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: <code>{s} —Å–æ–æ–±—â–µ–Ω–∏–π</code>\n"
        f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: <code>{n} —Å–æ–æ–±—â–µ–Ω–∏–π</code>"
    )
    await bot.send_message(chat_id=call.from_user.id, text=text)


@adminRouter.callback_query(F.data == "falsespam")
async def falsespam_func(call: CallbackQuery, state: FSM):
    await state.clear()
    await call.message.delete()
    text = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!</b>\n\n"
        "<i>–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º üëá</i>"
    )
    await bot.send_message(chat_id=call.from_user.id, text=text, reply_markup=kbMainAdmin())